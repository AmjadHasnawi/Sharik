// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Testing the Signin component should render banner text correctly with given strings 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Signin
    list={
      Array [
        "one",
        "two",
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h1>
          This is the Signin page 
        </h1>,
        <form
          action="/login"
          method="post"
        >
          <div>
            <label>
              Email address:
            </label>
            <input
              name="email"
              onChange={[Function]}
              type="text"
            />
          </div>
          <div>
            <label>
              Password:
            </label>
            <input
              name="password"
              onChange={[Function]}
              type="password"
            />
          </div>
          <div>
            <input
              onClick={[Function]}
              type="button"
              value="Log In"
            />
          </div>
        </form>,
        <a
          href="/auth/google"
        >
          <button
            className="btn btn-success"
          >
            Sign In with Google
          </button>
        </a>,
        <a
          href="/auth/facebook"
        >
          <button
            className="btn btn-danger"
          >
            Sign In with Facebook
          </button>
        </a>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "This is the Signin page ",
        },
        "ref": null,
        "rendered": "This is the Signin page ",
        "type": "h1",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "action": "/login",
          "children": Array [
            <div>
              <label>
                Email address:
              </label>
              <input
                name="email"
                onChange={[Function]}
                type="text"
              />
            </div>,
            <div>
              <label>
                Password:
              </label>
              <input
                name="password"
                onChange={[Function]}
                type="password"
              />
            </div>,
            <div>
              <input
                onClick={[Function]}
                type="button"
                value="Log In"
              />
            </div>,
          ],
          "method": "post",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <label>
                  Email address:
                </label>,
                <input
                  name="email"
                  onChange={[Function]}
                  type="text"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Email address:",
                },
                "ref": null,
                "rendered": "Email address:",
                "type": "label",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "email",
                  "onChange": [Function],
                  "type": "text",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <label>
                  Password:
                </label>,
                <input
                  name="password"
                  onChange={[Function]}
                  type="password"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Password:",
                },
                "ref": null,
                "rendered": "Password:",
                "type": "label",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "password",
                  "onChange": [Function],
                  "type": "password",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <input
                onClick={[Function]}
                type="button"
                value="Log In"
              />,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "onClick": [Function],
                "type": "button",
                "value": "Log In",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            "type": "div",
          },
        ],
        "type": "form",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <button
            className="btn btn-success"
          >
            Sign In with Google
          </button>,
          "href": "/auth/google",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Sign In with Google",
            "className": "btn btn-success",
          },
          "ref": null,
          "rendered": "Sign In with Google",
          "type": "button",
        },
        "type": "a",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <button
            className="btn btn-danger"
          >
            Sign In with Facebook
          </button>,
          "href": "/auth/facebook",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Sign In with Facebook",
            "className": "btn btn-danger",
          },
          "ref": null,
          "rendered": "Sign In with Facebook",
          "type": "button",
        },
        "type": "a",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h1>
            This is the Signin page 
          </h1>,
          <form
            action="/login"
            method="post"
          >
            <div>
              <label>
                Email address:
              </label>
              <input
                name="email"
                onChange={[Function]}
                type="text"
              />
            </div>
            <div>
              <label>
                Password:
              </label>
              <input
                name="password"
                onChange={[Function]}
                type="password"
              />
            </div>
            <div>
              <input
                onClick={[Function]}
                type="button"
                value="Log In"
              />
            </div>
          </form>,
          <a
            href="/auth/google"
          >
            <button
              className="btn btn-success"
            >
              Sign In with Google
            </button>
          </a>,
          <a
            href="/auth/facebook"
          >
            <button
              className="btn btn-danger"
            >
              Sign In with Facebook
            </button>
          </a>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "This is the Signin page ",
          },
          "ref": null,
          "rendered": "This is the Signin page ",
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "action": "/login",
            "children": Array [
              <div>
                <label>
                  Email address:
                </label>
                <input
                  name="email"
                  onChange={[Function]}
                  type="text"
                />
              </div>,
              <div>
                <label>
                  Password:
                </label>
                <input
                  name="password"
                  onChange={[Function]}
                  type="password"
                />
              </div>,
              <div>
                <input
                  onClick={[Function]}
                  type="button"
                  value="Log In"
                />
              </div>,
            ],
            "method": "post",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <label>
                    Email address:
                  </label>,
                  <input
                    name="email"
                    onChange={[Function]}
                    type="text"
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Email address:",
                  },
                  "ref": null,
                  "rendered": "Email address:",
                  "type": "label",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "name": "email",
                    "onChange": [Function],
                    "type": "text",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <label>
                    Password:
                  </label>,
                  <input
                    name="password"
                    onChange={[Function]}
                    type="password"
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Password:",
                  },
                  "ref": null,
                  "rendered": "Password:",
                  "type": "label",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "name": "password",
                    "onChange": [Function],
                    "type": "password",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <input
                  onClick={[Function]}
                  type="button"
                  value="Log In"
                />,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "onClick": [Function],
                  "type": "button",
                  "value": "Log In",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              "type": "div",
            },
          ],
          "type": "form",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <button
              className="btn btn-success"
            >
              Sign In with Google
            </button>,
            "href": "/auth/google",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Sign In with Google",
              "className": "btn btn-success",
            },
            "ref": null,
            "rendered": "Sign In with Google",
            "type": "button",
          },
          "type": "a",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <button
              className="btn btn-danger"
            >
              Sign In with Facebook
            </button>,
            "href": "/auth/facebook",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Sign In with Facebook",
              "className": "btn btn-danger",
            },
            "ref": null,
            "rendered": "Sign In with Facebook",
            "type": "button",
          },
          "type": "a",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Testing the Signin component should render correctly in "debug" mode 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Signin
    debug={true}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h1>
          This is the Signin page 
        </h1>,
        <form
          action="/login"
          method="post"
        >
          <div>
            <label>
              Email address:
            </label>
            <input
              name="email"
              onChange={[Function]}
              type="text"
            />
          </div>
          <div>
            <label>
              Password:
            </label>
            <input
              name="password"
              onChange={[Function]}
              type="password"
            />
          </div>
          <div>
            <input
              onClick={[Function]}
              type="button"
              value="Log In"
            />
          </div>
        </form>,
        <a
          href="/auth/google"
        >
          <button
            className="btn btn-success"
          >
            Sign In with Google
          </button>
        </a>,
        <a
          href="/auth/facebook"
        >
          <button
            className="btn btn-danger"
          >
            Sign In with Facebook
          </button>
        </a>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "This is the Signin page ",
        },
        "ref": null,
        "rendered": "This is the Signin page ",
        "type": "h1",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "action": "/login",
          "children": Array [
            <div>
              <label>
                Email address:
              </label>
              <input
                name="email"
                onChange={[Function]}
                type="text"
              />
            </div>,
            <div>
              <label>
                Password:
              </label>
              <input
                name="password"
                onChange={[Function]}
                type="password"
              />
            </div>,
            <div>
              <input
                onClick={[Function]}
                type="button"
                value="Log In"
              />
            </div>,
          ],
          "method": "post",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <label>
                  Email address:
                </label>,
                <input
                  name="email"
                  onChange={[Function]}
                  type="text"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Email address:",
                },
                "ref": null,
                "rendered": "Email address:",
                "type": "label",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "email",
                  "onChange": [Function],
                  "type": "text",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <label>
                  Password:
                </label>,
                <input
                  name="password"
                  onChange={[Function]}
                  type="password"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Password:",
                },
                "ref": null,
                "rendered": "Password:",
                "type": "label",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "password",
                  "onChange": [Function],
                  "type": "password",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <input
                onClick={[Function]}
                type="button"
                value="Log In"
              />,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "onClick": [Function],
                "type": "button",
                "value": "Log In",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            "type": "div",
          },
        ],
        "type": "form",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <button
            className="btn btn-success"
          >
            Sign In with Google
          </button>,
          "href": "/auth/google",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Sign In with Google",
            "className": "btn btn-success",
          },
          "ref": null,
          "rendered": "Sign In with Google",
          "type": "button",
        },
        "type": "a",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <button
            className="btn btn-danger"
          >
            Sign In with Facebook
          </button>,
          "href": "/auth/facebook",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Sign In with Facebook",
            "className": "btn btn-danger",
          },
          "ref": null,
          "rendered": "Sign In with Facebook",
          "type": "button",
        },
        "type": "a",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h1>
            This is the Signin page 
          </h1>,
          <form
            action="/login"
            method="post"
          >
            <div>
              <label>
                Email address:
              </label>
              <input
                name="email"
                onChange={[Function]}
                type="text"
              />
            </div>
            <div>
              <label>
                Password:
              </label>
              <input
                name="password"
                onChange={[Function]}
                type="password"
              />
            </div>
            <div>
              <input
                onClick={[Function]}
                type="button"
                value="Log In"
              />
            </div>
          </form>,
          <a
            href="/auth/google"
          >
            <button
              className="btn btn-success"
            >
              Sign In with Google
            </button>
          </a>,
          <a
            href="/auth/facebook"
          >
            <button
              className="btn btn-danger"
            >
              Sign In with Facebook
            </button>
          </a>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "This is the Signin page ",
          },
          "ref": null,
          "rendered": "This is the Signin page ",
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "action": "/login",
            "children": Array [
              <div>
                <label>
                  Email address:
                </label>
                <input
                  name="email"
                  onChange={[Function]}
                  type="text"
                />
              </div>,
              <div>
                <label>
                  Password:
                </label>
                <input
                  name="password"
                  onChange={[Function]}
                  type="password"
                />
              </div>,
              <div>
                <input
                  onClick={[Function]}
                  type="button"
                  value="Log In"
                />
              </div>,
            ],
            "method": "post",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <label>
                    Email address:
                  </label>,
                  <input
                    name="email"
                    onChange={[Function]}
                    type="text"
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Email address:",
                  },
                  "ref": null,
                  "rendered": "Email address:",
                  "type": "label",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "name": "email",
                    "onChange": [Function],
                    "type": "text",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <label>
                    Password:
                  </label>,
                  <input
                    name="password"
                    onChange={[Function]}
                    type="password"
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Password:",
                  },
                  "ref": null,
                  "rendered": "Password:",
                  "type": "label",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "name": "password",
                    "onChange": [Function],
                    "type": "password",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <input
                  onClick={[Function]}
                  type="button"
                  value="Log In"
                />,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "onClick": [Function],
                  "type": "button",
                  "value": "Log In",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              "type": "div",
            },
          ],
          "type": "form",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <button
              className="btn btn-success"
            >
              Sign In with Google
            </button>,
            "href": "/auth/google",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Sign In with Google",
              "className": "btn btn-success",
            },
            "ref": null,
            "rendered": "Sign In with Google",
            "type": "button",
          },
          "type": "a",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <button
              className="btn btn-danger"
            >
              Sign In with Facebook
            </button>,
            "href": "/auth/facebook",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Sign In with Facebook",
              "className": "btn btn-danger",
            },
            "ref": null,
            "rendered": "Sign In with Facebook",
            "type": "button",
          },
          "type": "a",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Testing the Signin component should render correctly with no props 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Signin />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h1>
          This is the Signin page 
        </h1>,
        <form
          action="/login"
          method="post"
        >
          <div>
            <label>
              Email address:
            </label>
            <input
              name="email"
              onChange={[Function]}
              type="text"
            />
          </div>
          <div>
            <label>
              Password:
            </label>
            <input
              name="password"
              onChange={[Function]}
              type="password"
            />
          </div>
          <div>
            <input
              onClick={[Function]}
              type="button"
              value="Log In"
            />
          </div>
        </form>,
        <a
          href="/auth/google"
        >
          <button
            className="btn btn-success"
          >
            Sign In with Google
          </button>
        </a>,
        <a
          href="/auth/facebook"
        >
          <button
            className="btn btn-danger"
          >
            Sign In with Facebook
          </button>
        </a>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "This is the Signin page ",
        },
        "ref": null,
        "rendered": "This is the Signin page ",
        "type": "h1",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "action": "/login",
          "children": Array [
            <div>
              <label>
                Email address:
              </label>
              <input
                name="email"
                onChange={[Function]}
                type="text"
              />
            </div>,
            <div>
              <label>
                Password:
              </label>
              <input
                name="password"
                onChange={[Function]}
                type="password"
              />
            </div>,
            <div>
              <input
                onClick={[Function]}
                type="button"
                value="Log In"
              />
            </div>,
          ],
          "method": "post",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <label>
                  Email address:
                </label>,
                <input
                  name="email"
                  onChange={[Function]}
                  type="text"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Email address:",
                },
                "ref": null,
                "rendered": "Email address:",
                "type": "label",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "email",
                  "onChange": [Function],
                  "type": "text",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <label>
                  Password:
                </label>,
                <input
                  name="password"
                  onChange={[Function]}
                  type="password"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Password:",
                },
                "ref": null,
                "rendered": "Password:",
                "type": "label",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "password",
                  "onChange": [Function],
                  "type": "password",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <input
                onClick={[Function]}
                type="button"
                value="Log In"
              />,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "onClick": [Function],
                "type": "button",
                "value": "Log In",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            "type": "div",
          },
        ],
        "type": "form",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <button
            className="btn btn-success"
          >
            Sign In with Google
          </button>,
          "href": "/auth/google",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Sign In with Google",
            "className": "btn btn-success",
          },
          "ref": null,
          "rendered": "Sign In with Google",
          "type": "button",
        },
        "type": "a",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <button
            className="btn btn-danger"
          >
            Sign In with Facebook
          </button>,
          "href": "/auth/facebook",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Sign In with Facebook",
            "className": "btn btn-danger",
          },
          "ref": null,
          "rendered": "Sign In with Facebook",
          "type": "button",
        },
        "type": "a",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h1>
            This is the Signin page 
          </h1>,
          <form
            action="/login"
            method="post"
          >
            <div>
              <label>
                Email address:
              </label>
              <input
                name="email"
                onChange={[Function]}
                type="text"
              />
            </div>
            <div>
              <label>
                Password:
              </label>
              <input
                name="password"
                onChange={[Function]}
                type="password"
              />
            </div>
            <div>
              <input
                onClick={[Function]}
                type="button"
                value="Log In"
              />
            </div>
          </form>,
          <a
            href="/auth/google"
          >
            <button
              className="btn btn-success"
            >
              Sign In with Google
            </button>
          </a>,
          <a
            href="/auth/facebook"
          >
            <button
              className="btn btn-danger"
            >
              Sign In with Facebook
            </button>
          </a>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "This is the Signin page ",
          },
          "ref": null,
          "rendered": "This is the Signin page ",
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "action": "/login",
            "children": Array [
              <div>
                <label>
                  Email address:
                </label>
                <input
                  name="email"
                  onChange={[Function]}
                  type="text"
                />
              </div>,
              <div>
                <label>
                  Password:
                </label>
                <input
                  name="password"
                  onChange={[Function]}
                  type="password"
                />
              </div>,
              <div>
                <input
                  onClick={[Function]}
                  type="button"
                  value="Log In"
                />
              </div>,
            ],
            "method": "post",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <label>
                    Email address:
                  </label>,
                  <input
                    name="email"
                    onChange={[Function]}
                    type="text"
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Email address:",
                  },
                  "ref": null,
                  "rendered": "Email address:",
                  "type": "label",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "name": "email",
                    "onChange": [Function],
                    "type": "text",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <label>
                    Password:
                  </label>,
                  <input
                    name="password"
                    onChange={[Function]}
                    type="password"
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Password:",
                  },
                  "ref": null,
                  "rendered": "Password:",
                  "type": "label",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "name": "password",
                    "onChange": [Function],
                    "type": "password",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <input
                  onClick={[Function]}
                  type="button"
                  value="Log In"
                />,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "onClick": [Function],
                  "type": "button",
                  "value": "Log In",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              "type": "div",
            },
          ],
          "type": "form",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <button
              className="btn btn-success"
            >
              Sign In with Google
            </button>,
            "href": "/auth/google",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Sign In with Google",
              "className": "btn btn-success",
            },
            "ref": null,
            "rendered": "Sign In with Google",
            "type": "button",
          },
          "type": "a",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <button
              className="btn btn-danger"
            >
              Sign In with Facebook
            </button>,
            "href": "/auth/facebook",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Sign In with Facebook",
              "className": "btn btn-danger",
            },
            "ref": null,
            "rendered": "Sign In with Facebook",
            "type": "button",
          },
          "type": "a",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Testing the Signup component should render banner text correctly with given strings 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Signup
    list={
      Array [
        "one",
        "two",
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h1>
          This is the Signup page 
        </h1>,
        <form
          action="/signup"
          method="post"
        >
          <div>
            <label>
              First name
            </label>
            <input
              name="firstName"
              onChange={[Function]}
              type="text"
            />
          </div>
          <div>
            <label>
              Last name
            </label>
            <input
              name="lastName"
              onChange={[Function]}
              type="text"
            />
          </div>
          <div>
            <label>
              Email
            </label>
            <input
              name="email"
              onChange={[Function]}
              type="email"
            />
          </div>
          <div>
            <label>
              Password:
            </label>
            <input
              name="password"
              onChange={[Function]}
              type="password"
            />
          </div>
          <div>
            <input
              onClick={[Function]}
              type="button"
              value="signup"
            />
          </div>
        </form>,
        <a
          href="/auth/google"
        >
          <button
            className="btn btn-success"
          >
            Sign In with Google
          </button>
        </a>,
        <a
          href="/auth/facebook"
        >
          <button
            className="btn btn-danger"
          >
            Sign In with Facebook
          </button>
        </a>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "This is the Signup page ",
        },
        "ref": null,
        "rendered": "This is the Signup page ",
        "type": "h1",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "action": "/signup",
          "children": Array [
            <div>
              <label>
                First name
              </label>
              <input
                name="firstName"
                onChange={[Function]}
                type="text"
              />
            </div>,
            <div>
              <label>
                Last name
              </label>
              <input
                name="lastName"
                onChange={[Function]}
                type="text"
              />
            </div>,
            <div>
              <label>
                Email
              </label>
              <input
                name="email"
                onChange={[Function]}
                type="email"
              />
            </div>,
            <div>
              <label>
                Password:
              </label>
              <input
                name="password"
                onChange={[Function]}
                type="password"
              />
            </div>,
            <div>
              <input
                onClick={[Function]}
                type="button"
                value="signup"
              />
            </div>,
          ],
          "method": "post",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <label>
                  First name
                </label>,
                <input
                  name="firstName"
                  onChange={[Function]}
                  type="text"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "First name",
                },
                "ref": null,
                "rendered": "First name",
                "type": "label",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "firstName",
                  "onChange": [Function],
                  "type": "text",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <label>
                  Last name
                </label>,
                <input
                  name="lastName"
                  onChange={[Function]}
                  type="text"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Last name",
                },
                "ref": null,
                "rendered": "Last name",
                "type": "label",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "lastName",
                  "onChange": [Function],
                  "type": "text",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <label>
                  Email
                </label>,
                <input
                  name="email"
                  onChange={[Function]}
                  type="email"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Email",
                },
                "ref": null,
                "rendered": "Email",
                "type": "label",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "email",
                  "onChange": [Function],
                  "type": "email",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <label>
                  Password:
                </label>,
                <input
                  name="password"
                  onChange={[Function]}
                  type="password"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Password:",
                },
                "ref": null,
                "rendered": "Password:",
                "type": "label",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "password",
                  "onChange": [Function],
                  "type": "password",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <input
                onClick={[Function]}
                type="button"
                value="signup"
              />,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "onClick": [Function],
                "type": "button",
                "value": "signup",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            "type": "div",
          },
        ],
        "type": "form",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <button
            className="btn btn-success"
          >
            Sign In with Google
          </button>,
          "href": "/auth/google",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Sign In with Google",
            "className": "btn btn-success",
          },
          "ref": null,
          "rendered": "Sign In with Google",
          "type": "button",
        },
        "type": "a",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <button
            className="btn btn-danger"
          >
            Sign In with Facebook
          </button>,
          "href": "/auth/facebook",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Sign In with Facebook",
            "className": "btn btn-danger",
          },
          "ref": null,
          "rendered": "Sign In with Facebook",
          "type": "button",
        },
        "type": "a",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h1>
            This is the Signup page 
          </h1>,
          <form
            action="/signup"
            method="post"
          >
            <div>
              <label>
                First name
              </label>
              <input
                name="firstName"
                onChange={[Function]}
                type="text"
              />
            </div>
            <div>
              <label>
                Last name
              </label>
              <input
                name="lastName"
                onChange={[Function]}
                type="text"
              />
            </div>
            <div>
              <label>
                Email
              </label>
              <input
                name="email"
                onChange={[Function]}
                type="email"
              />
            </div>
            <div>
              <label>
                Password:
              </label>
              <input
                name="password"
                onChange={[Function]}
                type="password"
              />
            </div>
            <div>
              <input
                onClick={[Function]}
                type="button"
                value="signup"
              />
            </div>
          </form>,
          <a
            href="/auth/google"
          >
            <button
              className="btn btn-success"
            >
              Sign In with Google
            </button>
          </a>,
          <a
            href="/auth/facebook"
          >
            <button
              className="btn btn-danger"
            >
              Sign In with Facebook
            </button>
          </a>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "This is the Signup page ",
          },
          "ref": null,
          "rendered": "This is the Signup page ",
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "action": "/signup",
            "children": Array [
              <div>
                <label>
                  First name
                </label>
                <input
                  name="firstName"
                  onChange={[Function]}
                  type="text"
                />
              </div>,
              <div>
                <label>
                  Last name
                </label>
                <input
                  name="lastName"
                  onChange={[Function]}
                  type="text"
                />
              </div>,
              <div>
                <label>
                  Email
                </label>
                <input
                  name="email"
                  onChange={[Function]}
                  type="email"
                />
              </div>,
              <div>
                <label>
                  Password:
                </label>
                <input
                  name="password"
                  onChange={[Function]}
                  type="password"
                />
              </div>,
              <div>
                <input
                  onClick={[Function]}
                  type="button"
                  value="signup"
                />
              </div>,
            ],
            "method": "post",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <label>
                    First name
                  </label>,
                  <input
                    name="firstName"
                    onChange={[Function]}
                    type="text"
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "First name",
                  },
                  "ref": null,
                  "rendered": "First name",
                  "type": "label",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "name": "firstName",
                    "onChange": [Function],
                    "type": "text",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <label>
                    Last name
                  </label>,
                  <input
                    name="lastName"
                    onChange={[Function]}
                    type="text"
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Last name",
                  },
                  "ref": null,
                  "rendered": "Last name",
                  "type": "label",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "name": "lastName",
                    "onChange": [Function],
                    "type": "text",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <label>
                    Email
                  </label>,
                  <input
                    name="email"
                    onChange={[Function]}
                    type="email"
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Email",
                  },
                  "ref": null,
                  "rendered": "Email",
                  "type": "label",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "name": "email",
                    "onChange": [Function],
                    "type": "email",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <label>
                    Password:
                  </label>,
                  <input
                    name="password"
                    onChange={[Function]}
                    type="password"
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Password:",
                  },
                  "ref": null,
                  "rendered": "Password:",
                  "type": "label",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "name": "password",
                    "onChange": [Function],
                    "type": "password",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <input
                  onClick={[Function]}
                  type="button"
                  value="signup"
                />,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "onClick": [Function],
                  "type": "button",
                  "value": "signup",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              "type": "div",
            },
          ],
          "type": "form",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <button
              className="btn btn-success"
            >
              Sign In with Google
            </button>,
            "href": "/auth/google",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Sign In with Google",
              "className": "btn btn-success",
            },
            "ref": null,
            "rendered": "Sign In with Google",
            "type": "button",
          },
          "type": "a",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <button
              className="btn btn-danger"
            >
              Sign In with Facebook
            </button>,
            "href": "/auth/facebook",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Sign In with Facebook",
              "className": "btn btn-danger",
            },
            "ref": null,
            "rendered": "Sign In with Facebook",
            "type": "button",
          },
          "type": "a",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Testing the Signup component should render correctly in "debug" mode 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Signup
    debug={true}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h1>
          This is the Signup page 
        </h1>,
        <form
          action="/signup"
          method="post"
        >
          <div>
            <label>
              First name
            </label>
            <input
              name="firstName"
              onChange={[Function]}
              type="text"
            />
          </div>
          <div>
            <label>
              Last name
            </label>
            <input
              name="lastName"
              onChange={[Function]}
              type="text"
            />
          </div>
          <div>
            <label>
              Email
            </label>
            <input
              name="email"
              onChange={[Function]}
              type="email"
            />
          </div>
          <div>
            <label>
              Password:
            </label>
            <input
              name="password"
              onChange={[Function]}
              type="password"
            />
          </div>
          <div>
            <input
              onClick={[Function]}
              type="button"
              value="signup"
            />
          </div>
        </form>,
        <a
          href="/auth/google"
        >
          <button
            className="btn btn-success"
          >
            Sign In with Google
          </button>
        </a>,
        <a
          href="/auth/facebook"
        >
          <button
            className="btn btn-danger"
          >
            Sign In with Facebook
          </button>
        </a>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "This is the Signup page ",
        },
        "ref": null,
        "rendered": "This is the Signup page ",
        "type": "h1",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "action": "/signup",
          "children": Array [
            <div>
              <label>
                First name
              </label>
              <input
                name="firstName"
                onChange={[Function]}
                type="text"
              />
            </div>,
            <div>
              <label>
                Last name
              </label>
              <input
                name="lastName"
                onChange={[Function]}
                type="text"
              />
            </div>,
            <div>
              <label>
                Email
              </label>
              <input
                name="email"
                onChange={[Function]}
                type="email"
              />
            </div>,
            <div>
              <label>
                Password:
              </label>
              <input
                name="password"
                onChange={[Function]}
                type="password"
              />
            </div>,
            <div>
              <input
                onClick={[Function]}
                type="button"
                value="signup"
              />
            </div>,
          ],
          "method": "post",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <label>
                  First name
                </label>,
                <input
                  name="firstName"
                  onChange={[Function]}
                  type="text"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "First name",
                },
                "ref": null,
                "rendered": "First name",
                "type": "label",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "firstName",
                  "onChange": [Function],
                  "type": "text",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <label>
                  Last name
                </label>,
                <input
                  name="lastName"
                  onChange={[Function]}
                  type="text"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Last name",
                },
                "ref": null,
                "rendered": "Last name",
                "type": "label",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "lastName",
                  "onChange": [Function],
                  "type": "text",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <label>
                  Email
                </label>,
                <input
                  name="email"
                  onChange={[Function]}
                  type="email"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Email",
                },
                "ref": null,
                "rendered": "Email",
                "type": "label",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "email",
                  "onChange": [Function],
                  "type": "email",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <label>
                  Password:
                </label>,
                <input
                  name="password"
                  onChange={[Function]}
                  type="password"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Password:",
                },
                "ref": null,
                "rendered": "Password:",
                "type": "label",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "password",
                  "onChange": [Function],
                  "type": "password",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <input
                onClick={[Function]}
                type="button"
                value="signup"
              />,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "onClick": [Function],
                "type": "button",
                "value": "signup",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            "type": "div",
          },
        ],
        "type": "form",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <button
            className="btn btn-success"
          >
            Sign In with Google
          </button>,
          "href": "/auth/google",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Sign In with Google",
            "className": "btn btn-success",
          },
          "ref": null,
          "rendered": "Sign In with Google",
          "type": "button",
        },
        "type": "a",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <button
            className="btn btn-danger"
          >
            Sign In with Facebook
          </button>,
          "href": "/auth/facebook",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Sign In with Facebook",
            "className": "btn btn-danger",
          },
          "ref": null,
          "rendered": "Sign In with Facebook",
          "type": "button",
        },
        "type": "a",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h1>
            This is the Signup page 
          </h1>,
          <form
            action="/signup"
            method="post"
          >
            <div>
              <label>
                First name
              </label>
              <input
                name="firstName"
                onChange={[Function]}
                type="text"
              />
            </div>
            <div>
              <label>
                Last name
              </label>
              <input
                name="lastName"
                onChange={[Function]}
                type="text"
              />
            </div>
            <div>
              <label>
                Email
              </label>
              <input
                name="email"
                onChange={[Function]}
                type="email"
              />
            </div>
            <div>
              <label>
                Password:
              </label>
              <input
                name="password"
                onChange={[Function]}
                type="password"
              />
            </div>
            <div>
              <input
                onClick={[Function]}
                type="button"
                value="signup"
              />
            </div>
          </form>,
          <a
            href="/auth/google"
          >
            <button
              className="btn btn-success"
            >
              Sign In with Google
            </button>
          </a>,
          <a
            href="/auth/facebook"
          >
            <button
              className="btn btn-danger"
            >
              Sign In with Facebook
            </button>
          </a>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "This is the Signup page ",
          },
          "ref": null,
          "rendered": "This is the Signup page ",
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "action": "/signup",
            "children": Array [
              <div>
                <label>
                  First name
                </label>
                <input
                  name="firstName"
                  onChange={[Function]}
                  type="text"
                />
              </div>,
              <div>
                <label>
                  Last name
                </label>
                <input
                  name="lastName"
                  onChange={[Function]}
                  type="text"
                />
              </div>,
              <div>
                <label>
                  Email
                </label>
                <input
                  name="email"
                  onChange={[Function]}
                  type="email"
                />
              </div>,
              <div>
                <label>
                  Password:
                </label>
                <input
                  name="password"
                  onChange={[Function]}
                  type="password"
                />
              </div>,
              <div>
                <input
                  onClick={[Function]}
                  type="button"
                  value="signup"
                />
              </div>,
            ],
            "method": "post",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <label>
                    First name
                  </label>,
                  <input
                    name="firstName"
                    onChange={[Function]}
                    type="text"
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "First name",
                  },
                  "ref": null,
                  "rendered": "First name",
                  "type": "label",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "name": "firstName",
                    "onChange": [Function],
                    "type": "text",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <label>
                    Last name
                  </label>,
                  <input
                    name="lastName"
                    onChange={[Function]}
                    type="text"
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Last name",
                  },
                  "ref": null,
                  "rendered": "Last name",
                  "type": "label",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "name": "lastName",
                    "onChange": [Function],
                    "type": "text",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <label>
                    Email
                  </label>,
                  <input
                    name="email"
                    onChange={[Function]}
                    type="email"
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Email",
                  },
                  "ref": null,
                  "rendered": "Email",
                  "type": "label",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "name": "email",
                    "onChange": [Function],
                    "type": "email",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <label>
                    Password:
                  </label>,
                  <input
                    name="password"
                    onChange={[Function]}
                    type="password"
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Password:",
                  },
                  "ref": null,
                  "rendered": "Password:",
                  "type": "label",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "name": "password",
                    "onChange": [Function],
                    "type": "password",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <input
                  onClick={[Function]}
                  type="button"
                  value="signup"
                />,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "onClick": [Function],
                  "type": "button",
                  "value": "signup",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              "type": "div",
            },
          ],
          "type": "form",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <button
              className="btn btn-success"
            >
              Sign In with Google
            </button>,
            "href": "/auth/google",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Sign In with Google",
              "className": "btn btn-success",
            },
            "ref": null,
            "rendered": "Sign In with Google",
            "type": "button",
          },
          "type": "a",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <button
              className="btn btn-danger"
            >
              Sign In with Facebook
            </button>,
            "href": "/auth/facebook",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Sign In with Facebook",
              "className": "btn btn-danger",
            },
            "ref": null,
            "rendered": "Sign In with Facebook",
            "type": "button",
          },
          "type": "a",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Testing the Signup component should render correctly with no props 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Signup />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h1>
          This is the Signup page 
        </h1>,
        <form
          action="/signup"
          method="post"
        >
          <div>
            <label>
              First name
            </label>
            <input
              name="firstName"
              onChange={[Function]}
              type="text"
            />
          </div>
          <div>
            <label>
              Last name
            </label>
            <input
              name="lastName"
              onChange={[Function]}
              type="text"
            />
          </div>
          <div>
            <label>
              Email
            </label>
            <input
              name="email"
              onChange={[Function]}
              type="email"
            />
          </div>
          <div>
            <label>
              Password:
            </label>
            <input
              name="password"
              onChange={[Function]}
              type="password"
            />
          </div>
          <div>
            <input
              onClick={[Function]}
              type="button"
              value="signup"
            />
          </div>
        </form>,
        <a
          href="/auth/google"
        >
          <button
            className="btn btn-success"
          >
            Sign In with Google
          </button>
        </a>,
        <a
          href="/auth/facebook"
        >
          <button
            className="btn btn-danger"
          >
            Sign In with Facebook
          </button>
        </a>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "This is the Signup page ",
        },
        "ref": null,
        "rendered": "This is the Signup page ",
        "type": "h1",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "action": "/signup",
          "children": Array [
            <div>
              <label>
                First name
              </label>
              <input
                name="firstName"
                onChange={[Function]}
                type="text"
              />
            </div>,
            <div>
              <label>
                Last name
              </label>
              <input
                name="lastName"
                onChange={[Function]}
                type="text"
              />
            </div>,
            <div>
              <label>
                Email
              </label>
              <input
                name="email"
                onChange={[Function]}
                type="email"
              />
            </div>,
            <div>
              <label>
                Password:
              </label>
              <input
                name="password"
                onChange={[Function]}
                type="password"
              />
            </div>,
            <div>
              <input
                onClick={[Function]}
                type="button"
                value="signup"
              />
            </div>,
          ],
          "method": "post",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <label>
                  First name
                </label>,
                <input
                  name="firstName"
                  onChange={[Function]}
                  type="text"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "First name",
                },
                "ref": null,
                "rendered": "First name",
                "type": "label",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "firstName",
                  "onChange": [Function],
                  "type": "text",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <label>
                  Last name
                </label>,
                <input
                  name="lastName"
                  onChange={[Function]}
                  type="text"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Last name",
                },
                "ref": null,
                "rendered": "Last name",
                "type": "label",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "lastName",
                  "onChange": [Function],
                  "type": "text",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <label>
                  Email
                </label>,
                <input
                  name="email"
                  onChange={[Function]}
                  type="email"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Email",
                },
                "ref": null,
                "rendered": "Email",
                "type": "label",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "email",
                  "onChange": [Function],
                  "type": "email",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <label>
                  Password:
                </label>,
                <input
                  name="password"
                  onChange={[Function]}
                  type="password"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Password:",
                },
                "ref": null,
                "rendered": "Password:",
                "type": "label",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "password",
                  "onChange": [Function],
                  "type": "password",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <input
                onClick={[Function]}
                type="button"
                value="signup"
              />,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "onClick": [Function],
                "type": "button",
                "value": "signup",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            "type": "div",
          },
        ],
        "type": "form",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <button
            className="btn btn-success"
          >
            Sign In with Google
          </button>,
          "href": "/auth/google",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Sign In with Google",
            "className": "btn btn-success",
          },
          "ref": null,
          "rendered": "Sign In with Google",
          "type": "button",
        },
        "type": "a",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <button
            className="btn btn-danger"
          >
            Sign In with Facebook
          </button>,
          "href": "/auth/facebook",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Sign In with Facebook",
            "className": "btn btn-danger",
          },
          "ref": null,
          "rendered": "Sign In with Facebook",
          "type": "button",
        },
        "type": "a",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h1>
            This is the Signup page 
          </h1>,
          <form
            action="/signup"
            method="post"
          >
            <div>
              <label>
                First name
              </label>
              <input
                name="firstName"
                onChange={[Function]}
                type="text"
              />
            </div>
            <div>
              <label>
                Last name
              </label>
              <input
                name="lastName"
                onChange={[Function]}
                type="text"
              />
            </div>
            <div>
              <label>
                Email
              </label>
              <input
                name="email"
                onChange={[Function]}
                type="email"
              />
            </div>
            <div>
              <label>
                Password:
              </label>
              <input
                name="password"
                onChange={[Function]}
                type="password"
              />
            </div>
            <div>
              <input
                onClick={[Function]}
                type="button"
                value="signup"
              />
            </div>
          </form>,
          <a
            href="/auth/google"
          >
            <button
              className="btn btn-success"
            >
              Sign In with Google
            </button>
          </a>,
          <a
            href="/auth/facebook"
          >
            <button
              className="btn btn-danger"
            >
              Sign In with Facebook
            </button>
          </a>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "This is the Signup page ",
          },
          "ref": null,
          "rendered": "This is the Signup page ",
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "action": "/signup",
            "children": Array [
              <div>
                <label>
                  First name
                </label>
                <input
                  name="firstName"
                  onChange={[Function]}
                  type="text"
                />
              </div>,
              <div>
                <label>
                  Last name
                </label>
                <input
                  name="lastName"
                  onChange={[Function]}
                  type="text"
                />
              </div>,
              <div>
                <label>
                  Email
                </label>
                <input
                  name="email"
                  onChange={[Function]}
                  type="email"
                />
              </div>,
              <div>
                <label>
                  Password:
                </label>
                <input
                  name="password"
                  onChange={[Function]}
                  type="password"
                />
              </div>,
              <div>
                <input
                  onClick={[Function]}
                  type="button"
                  value="signup"
                />
              </div>,
            ],
            "method": "post",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <label>
                    First name
                  </label>,
                  <input
                    name="firstName"
                    onChange={[Function]}
                    type="text"
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "First name",
                  },
                  "ref": null,
                  "rendered": "First name",
                  "type": "label",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "name": "firstName",
                    "onChange": [Function],
                    "type": "text",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <label>
                    Last name
                  </label>,
                  <input
                    name="lastName"
                    onChange={[Function]}
                    type="text"
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Last name",
                  },
                  "ref": null,
                  "rendered": "Last name",
                  "type": "label",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "name": "lastName",
                    "onChange": [Function],
                    "type": "text",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <label>
                    Email
                  </label>,
                  <input
                    name="email"
                    onChange={[Function]}
                    type="email"
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Email",
                  },
                  "ref": null,
                  "rendered": "Email",
                  "type": "label",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "name": "email",
                    "onChange": [Function],
                    "type": "email",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <label>
                    Password:
                  </label>,
                  <input
                    name="password"
                    onChange={[Function]}
                    type="password"
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Password:",
                  },
                  "ref": null,
                  "rendered": "Password:",
                  "type": "label",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "name": "password",
                    "onChange": [Function],
                    "type": "password",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <input
                  onClick={[Function]}
                  type="button"
                  value="signup"
                />,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "onClick": [Function],
                  "type": "button",
                  "value": "signup",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              "type": "div",
            },
          ],
          "type": "form",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <button
              className="btn btn-success"
            >
              Sign In with Google
            </button>,
            "href": "/auth/google",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Sign In with Google",
              "className": "btn btn-success",
            },
            "ref": null,
            "rendered": "Sign In with Google",
            "type": "button",
          },
          "type": "a",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <button
              className="btn btn-danger"
            >
              Sign In with Facebook
            </button>,
            "href": "/auth/facebook",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Sign In with Facebook",
              "className": "btn btn-danger",
            },
            "ref": null,
            "rendered": "Sign In with Facebook",
            "type": "button",
          },
          "type": "a",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
